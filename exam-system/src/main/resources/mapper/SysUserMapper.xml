<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jomn.mapper.SysUserMapper">

	<resultMap id="sysUserMap" type="com.jomn.domain.SysUser">
		<id     property="userId"       column="user_id"      />
		<result property="loginName"    column="login_name"   />
		<result property="userName"     column="user_name"    />
		<result property="email"        column="email"        />
		<result property="userType"        column="user_type" />
		<result property="phonenumber"  column="phonenumber"  />
		<result property="sex"          column="sex"          />
		<result property="avatar"       column="avatar"       />
		<result property="password"     column="password"     />
		<result property="salt"         column="salt"         />
		<result property="status"       column="status"       />
		<result property="delFlag"      column="del_flag"     />
		<result property="loginIp"      column="login_ip"     />
		<result property="loginDate"    column="login_date"   />
		<result property="createBy"     column="create_by"    />
		<result property="createTime"   column="create_time"  />
		<result property="updateBy"     column="update_by"    />
		<result property="updateTime"   column="update_time"  />
		<result property="remark"       column="remark"       />
		<collection  property="roles"   javaType="java.util.List"     resultMap="RoleResult" />
	</resultMap>

	<resultMap id="RoleResult" type="com.jomn.domain.SysRole">
		<id     property="roleId"       column="role_id"        />
		<result property="roleName"     column="role_name"      />
		<result property="roleKey"      column="role_key"       />
		<result property="roleSort"     column="role_sort"      />
		<result property="dataScope"    column="data_scope"     />
		<result property="status"       column="role_status"    />
		<collection property="sysMenuList"  javaType="java.util.ArrayList" ofType="com.jomn.domain.SysMenu"
					select="com.jomn.mapper.SysMenuMapper.selectMenuListByRoleId" column="role_id"/>
	</resultMap>


	<insert id="insertUser">
		insert into sys_user(
		user_id,
		login_name,
		user_name,
		user_type,
		email,
		phonenumber,
		sex,
		avatar,
		password,
		salt,
		status,
		del_flag,
		login_ip,
		login_date,
		create_by,
		create_time,
		update_by,
		update_time,
		remark
		)values(
		#{userId}
		#{loginName}
		#{userName}
		#{userType}
		#{email}
		#{phonenumber}
		#{sex}
		#{avatar}
		#{password}
		#{salt}
		#{status}
		#{delFlag}
		#{loginIp}
		#{loginDate}
		#{createBy}
		#{createTime}
		#{updateBy}
		#{updateTime}
		#{remark}
		)
	</insert>

	<update id="updateUserById">
		update sys_user
		<trim prefix="set" suffixOverrides=",">
			<if test="userName != null and userName != ''">
				user_name = #{userName},
			</if>
			<if test="userType != null and userType != ''">
				user_type = #{userType},
			</if>
			<if test="email != null and email != ''">
				email = #{email},
			</if>
			<if test="phonenumber != null and phonenumber != ''">
				phonenumber = #{phonenumber},
			</if>
			<if test="sex != null and sex != ''">
				sex = #{sex},
			</if>
			<if test="updateTime != null and updateTime != ''">
				update_time = #{updateTime},
			</if>
			<if test="updateBy != null and updateBy != ''">
				update_by = #{updateBy},
			</if>
			<if test="status != null and status != ''">
				status = #{status},
			</if>
			<if test="delFlag != null and delFlag != ''">
				del_flag = #{delFlag},
			</if>
		</trim>
	</update>

	<delete id="deleteUserById">
		delete from sys_user where user_id = #{userId}
	</delete>

	<delete id="deleteUserByIds">
		update sys_user set del_flag = '2' where user_id in
		<foreach collection="array" item="userId" open="(" separator="," close=")">
			#{userId}
		</foreach>
	</delete>

	<select id="selectAllUserList" resultMap="sysUserMap">
		select * from sys_user
		<where>
			1 = 1
			<if test="userName != null and userName != ''">
				AND user_name = #{userName},
			</if>
			<if test="userType != null and userType != ''">
				AND user_type = #{userType},
			</if>
			<if test="email != null and email != ''">
				AND email = #{email},
			</if>
			<if test="phonenumber != null and phonenumber != ''">
				AND phonenumber = #{phonenumber},
			</if>
			<if test="sex != null and sex != ''">
				AND sex = #{sex},
			</if>
			<if test="updateTime != null and updateTime != ''">
				AND update_time = #{updateTime},
			</if>
			<if test="updateBy != null and updateBy != ''">
				AND update_by = #{updateBy},
			</if>
			<if test="status != null and status != ''">
				AND status = #{status},
			</if>
			<if test="delFlag != null and delFlag != ''">
				AND del_flag = #{delFlag}
			</if>
		</where>
	</select>

    <select id="selectUserByLoginName" resultMap="sysUserMap">
		SELECT
		 	u.user_id, u.login_name, u.user_name, u.email, u.avatar, u.phonenumber, u.sex, u.password, u.salt, u.status, u.del_flag, u.login_ip, u.login_date, u.create_time, u.remark,
			r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.status as role_status
		FROM
			sys_user u,
			sys_user_role sur,
			sys_role r
		WHERE
			u.user_id = sur.user_id
		AND sur.role_id = r.role_id
		AND u.login_name = #{loginName}
		AND u.del_flag = '0'
	</select>

	<select id="selectUserById" resultMap="sysUserMap">
				SELECT
			u.user_id,
			u.login_name,
			u.user_name,
			u.email,
			u.avatar,
			u.phonenumber,
			u.sex,
			u. PASSWORD,
			u.salt,
			u. STATUS,
			u.del_flag,
			u.login_ip,
			u.login_date,
			u.create_time,
			u.remark,
			r.role_id,
			r.role_name,
			r.role_key,
			r.role_sort,
			r.data_scope,
			r. STATUS AS role_status
		FROM
			sys_user u,
			sys_user_role sur,
			sys_role r
		WHERE
			u.user_id = sur.user_id
		AND sur.role_id = r.role_id
		AND u.user_id = #{userId}
	</select>

</mapper>